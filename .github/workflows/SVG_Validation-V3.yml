name: SVG Validation

on:
  pull_request:
    paths:
      - '**.svg'

jobs:
  changedfiles:
    runs-on: ubuntu-latest
    outputs:
      all: ${{ steps.changes.outputs.all}}
      svg: ${{ steps.changes.outputs.svg }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Get changed files
        id: changes
        run: |
          echo "{all}={git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | xargs}" >> $GITHUB_OUTPUT
          echo "{svg}={git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep .svg$ | xargs}" >> $GITHUB_OUTPUT
          echo git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep .svg$ | xargs
      
      - name: test echo
        run: echo ${{steps.changedfiles.outputs.all}}

  validate:
    runs-on: ubuntu-latest
    needs: changedfiles
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: echo changed files
        run: echo ${{steps.changedfiles.outputs.svg}}
      
      - name: echo all changed files
        run: echo ${{steps.changedfiles.outputs.all}}

      - name: echo needs
        run: echo ${{needs.changedfiles.outputs.svg}}
      
      - name: echo needs.outputs
        run: echo ${{needs.changedfiles.outputs}}

      - name: Run JS action on SVG files
        run: |
          for file in "${{needs.changedfiles.outputs.svg}}"; do
            if [[ $file == *.svg ]]; then
              node svg-check.js $file
            fi
          done

      - name: Post comment
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const fs = require('fs');
            const errorFile = 'errors.md';
            if (fs.existsSync(errorFile)) {
              const errors = fs.readFileSync(errorFile, 'utf8');
              const issue_number = context.issue.number;
              github.issues.createComment({
                issue_number: issue_number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: errors
              });
            }